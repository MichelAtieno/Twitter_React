{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/profiles/badge.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport numeral from 'numeral';\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup';\nimport { UserDisplay, UserPicture } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayCount(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: props.className,\n    children: numeral(props.children).format(\"0a\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_c = DisplayCount;\n\nfunction ProfileBadge(props) {\n  const {\n    user,\n    didFollowToggle,\n    profileLoading\n  } = props;\n  console.log(user);\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\n\n  const handleFollowToggle = event => {\n    event.preventDefault();\n\n    if (didFollowToggle && !profileLoading) {\n      didFollowToggle(currentVerb);\n    }\n  };\n\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserPicture, {\n      user: user,\n      hideLink: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(UserDisplay, {\n        user: user,\n        includeFullName: true,\n        hideLink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayCount, {\n        children: user.follower_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this), \" \", user.follower_count === 1 ? \"follower\" : \"followers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayCount, {\n        children: user.following_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this), \" following\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleFollowToggle,\n      children: currentVerb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 19\n  }, this) : null;\n}\n\n_c2 = ProfileBadge;\nexport function ProfileBadgeComponent(props) {\n  _s();\n\n  const {\n    username\n  } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(false);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response);\n    }\n  };\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiProfileDetail(username, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [username, didLookup, setDidLookup]);\n\n  const handleNewFollow = actionVerb => {\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\n      console.log(response, status);\n\n      if (status === 200) {\n        setProfile(response);\n      }\n\n      setProfileLoading(false);\n    });\n    setProfileLoading(true);\n  };\n\n  return didLookup === false ? \"Loading...\" : profile ? /*#__PURE__*/_jsxDEV(ProfileBadge, {\n    user: profile,\n    didFollowToggle: handleNewFollow,\n    profileLoading: profileLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 60\n  }, this) : null;\n}\n\n_s(ProfileBadgeComponent, \"H/j7GOKoR7sXWvQfqaXHvlkJVIA=\");\n\n_c3 = ProfileBadgeComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DisplayCount\");\n$RefreshReg$(_c2, \"ProfileBadge\");\n$RefreshReg$(_c3, \"ProfileBadgeComponent\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/profiles/badge.js"],"names":["React","useEffect","useState","numeral","apiProfileDetail","apiProfileFollowToggle","UserDisplay","UserPicture","DisplayCount","props","className","children","format","ProfileBadge","user","didFollowToggle","profileLoading","console","log","currentVerb","is_following","handleFollowToggle","event","preventDefault","follower_count","following_count","ProfileBadgeComponent","username","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","response","status","handleNewFollow","actionVerb"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport numeral from 'numeral'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\nimport {UserDisplay, UserPicture} from './components';\n\n\nfunction DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    console.log(user)\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n                <UserPicture user={user} hideLink />\n                <p><UserDisplay user={user} includeFullName hideLink/></p>\n                <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\n                <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n                <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n        \n            </div> : null\n}\n\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      } \n    }\n  \n    useEffect(() =>{\n      if (didLookup === false) {\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n  \n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n      \n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ?  <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}"]},"metadata":{},"sourceType":"module"}