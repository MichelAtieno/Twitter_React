{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/buttons.js\";\nimport React from 'react';\nimport { apiTweetAction } from './lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action,\n    didPerformAction\n  } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleActionBackendEvent = (response, status) => {\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n_c = ActionBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionBtn\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/buttons.js"],"names":["React","apiTweetAction","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","response","status","handleClick","event","preventDefault","id","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA8B,UAA9B;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAAoCH,KAA1C;AACA,QAAMI,KAAK,GAAGH,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,CAA1C;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAxB,GAAoC,2BAAtD;AACA,QAAMC,aAAa,GAAGJ,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACK,OAAxB,GAAkC,QAAxD;;AAEA,QAAMC,wBAAwB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAErD,QAAI,CAACA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAA9B,KAAsCP,gBAA1C,EAA4D;AAE1DA,MAAAA,gBAAgB,CAACM,QAAD,EAAWC,MAAX,CAAhB;AACD;AACF,GAND;;AAQA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAf,IAAAA,cAAc,CAACG,KAAK,CAACa,EAAP,EAAWZ,MAAM,CAACa,IAAlB,EAAwBP,wBAAxB,CAAd;AAED,GAJD;;AAKA,QAAMD,OAAO,GAAGL,MAAM,CAACa,IAAP,KAAgB,MAAhB,GAA0B,GAAEX,KAAM,IAAGE,aAAc,EAAnD,GAAwDA,aAAxE;AACA,sBAAO;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAA8B,IAAA,OAAO,EAAEM,WAAvC;AAAA,cAAqDJ;AAArD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;KArBeR,S","sourcesContent":["import React from 'react'\nimport { apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) => {\n      \n      if ((status === 200 || status === 201) && didPerformAction) {\n       \n        didPerformAction(response, status)\n      }\n    }\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n      \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}"]},"metadata":{},"sourceType":"module"}