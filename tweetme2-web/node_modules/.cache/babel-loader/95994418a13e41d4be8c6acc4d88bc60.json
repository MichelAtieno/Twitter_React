{"ast":null,"code":"import _toConsumableArray from\"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiTweetFeed}from'./lookup';import{Tweet}from'./detail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function FeedList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsInit=_useState2[0],setTweetsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),nextUrl=_useState6[0],setNextUrl=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),tweetsDidSet=_useState8[0],setTweetsDidSet=_useState8[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){if(tweetsDidSet===false){var handleTweetListLookup=function handleTweetListLookup(response,status){if(status===200){setNextUrl(response.next);setTweetsInit(response.results);setTweetsDidSet(true);}};apiTweetFeed(handleTweetListLookup);}},[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newTweet){var updateTweetsInit=_toConsumableArray(tweetsInit);updateTweetsInit.unshift(newTweet);setTweetsInit(updateTweetsInit);var updateFinalTweets=_toConsumableArray(tweets);updateFinalTweets.unshift(tweets);setTweets(updateFinalTweets);};var handleLoadNext=function handleLoadNext(event){event.preventDefault();if(nextUrl!==null){var handleLoadNextResponse=function handleLoadNextResponse(response,status){if(status===200){setNextUrl(response.next);var newTweets=_toConsumableArray(tweets).concat(response.results);setTweetsInit(newTweets);setTweets(newTweets);}};apiTweetFeed(handleLoadNextResponse,nextUrl);}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[tweets.map(function(item,index){return/*#__PURE__*/_jsx(Tweet,{tweet:item,didRetweet:handleDidRetweet,className:\"my-5 py-5 border bg-white text-dark\"},\"\".concat(index,\"-{item.id}\"));}),nextUrl!==null&&/*#__PURE__*/_jsx(\"button\",{onClick:handleLoadNext,className:\"btn btn-outline-primary\",children:\"Load Next\"})]});}","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/feed.js"],"names":["React","useEffect","useState","apiTweetFeed","Tweet","FeedList","props","tweetsInit","setTweetsInit","tweets","setTweets","nextUrl","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","next","results","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","handleLoadNext","event","preventDefault","handleLoadNextResponse","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {  apiTweetFeed } from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } \n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  \n  }"]},"metadata":{},"sourceType":"module"}