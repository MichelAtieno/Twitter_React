{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/profiles/badge.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { apiProfileDetail } from './lookup';\nimport { UserDisplay, UserPicture } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileBadge(props) {\n  const {\n    user,\n    didFollowToggle\n  } = props;\n  console.log(user);\n  const currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\n\n  const handleFollowToggle = event => {\n    event.preventDefault();\n\n    if (didFollowToggle) {\n      didFollowToggle(currentVerb);\n    }\n  };\n\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserPicture, {\n      user: user,\n      hideLink: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(UserDisplay, {\n        user: user,\n        includeFullName: true,\n        hideLink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleFollowToggle,\n      children: currentVerb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this) : null;\n}\n\n_c = ProfileBadge;\nexport function ProfileBadgeComponent(props) {\n  _s();\n\n  const {\n    username\n  } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(false);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response);\n    }\n  };\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiProfileDetail(username, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [username, didLookup, setDidLookup]);\n\n  const handleNewFollow = verb = actionVerb => {\n    console.log(actionVerb);\n    setProfileLoading(true);\n  };\n\n  return didLookup === false ? \"Loading...\" : profile ? /*#__PURE__*/_jsxDEV(ProfileBadge, {\n    user: profile,\n    didFollowToggle: handleNewFollow,\n    profileLoading: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 60\n  }, this) : null;\n}\n\n_s(ProfileBadgeComponent, \"H/j7GOKoR7sXWvQfqaXHvlkJVIA=\");\n\n_c2 = ProfileBadgeComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileBadge\");\n$RefreshReg$(_c2, \"ProfileBadgeComponent\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/profiles/badge.js"],"names":["React","useEffect","useState","apiProfileDetail","UserDisplay","UserPicture","ProfileBadge","props","user","didFollowToggle","console","log","currentVerb","is_following","handleFollowToggle","event","preventDefault","ProfileBadgeComponent","username","didLookup","setDidLookup","profile","setProfile","profileLoading","setProfileLoading","handleBackendLookup","response","status","handleNewFollow","verb","actionVerb"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,gBAAR,QAA+B,UAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,cAAvC;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAA0BF,KAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,WAAW,GAAIJ,IAAI,IAAIA,IAAI,CAACK,YAAd,GAA8B,UAA9B,GAA2C,QAA/D;;AACA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIP,eAAJ,EAAqB;AACjBA,MAAAA,eAAe,CAACG,WAAD,CAAf;AACH;AACJ,GALD;;AAMA,SAAOJ,IAAI,gBAAG;AAAA,4BACF,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAyB,MAAA,QAAQ;AAAjC;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AAAA,6BAAG,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAyB,QAAA,eAAe,MAAxC;AAAyC,QAAA,QAAQ;AAAjD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEM,kBAA7C;AAAA,gBAAkEF;AAAlE;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GAKM,IALjB;AAMH;;KAhBQN,Y;AAmBT,OAAO,SAASW,qBAAT,CAA+BV,KAA/B,EAAsC;AAAA;;AACzC,QAAM;AAACW,IAAAA;AAAD,MAAaX,KAAnB;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMuB,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAChD,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAClBL,MAAAA,UAAU,CAACI,QAAD,CAAV;AACD;AACF,GAJD;;AAMAzB,EAAAA,SAAS,CAAC,MAAK;AACb,QAAIkB,SAAS,KAAK,KAAlB,EAAyB;AACvBhB,MAAAA,gBAAgB,CAACe,QAAD,EAAWO,mBAAX,CAAhB;AACAL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAEF,GANQ,EAMN,CAACF,QAAD,EAAWC,SAAX,EAAsBC,YAAtB,CANM,CAAT;;AAQA,QAAMQ,eAAe,GAAIC,IAAD,GAAUC,UAAD,IAAgB;AAC7CpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAHD;;AAIA,SAAOL,SAAS,KAAK,KAAd,GAAsB,YAAtB,GAAqCE,OAAO,gBAAI,QAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,OAApB;AAA6B,IAAA,eAAe,EAAEO,eAA9C;AAA+D,IAAA,cAAc;AAA7E;AAAA;AAAA;AAAA;AAAA,UAAJ,GAAuF,IAA1I;AACH;;GAzBeX,qB;;MAAAA,qB","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport {apiProfileDetail} from './lookup'\nimport {UserDisplay, UserPicture} from './components';\n\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle} = props\n    console.log(user)\n    const currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n                <UserPicture user={user} hideLink />\n                <p><UserDisplay user={user} includeFullName hideLink/></p>\n                <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n        \n            </div> : null\n}\n\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      } \n    }\n  \n    useEffect(() =>{\n      if (didLookup === false) {\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n  \n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (verb) = (actionVerb) => {\n        console.log(actionVerb)\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ?  <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading /> : null\n}"]},"metadata":{},"sourceType":"module"}