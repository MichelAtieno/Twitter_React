{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserLink(props) {\n  const {\n    username\n  } = props;\n\n  const handleUserLink = event => {\n    window.location.href = `/profiles/${username}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: handleUserLink,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n_c = UserLink;\n\nfunction UserDisplay(props) {\n  const {\n    user,\n    includeFullName\n  } = props;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [nameDisplay, /*#__PURE__*/_jsxDEV(UserLink, {\n      username: user.username,\n      children: [\"@\", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = UserDisplay;\n\nfunction UserPicture(props) {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/_jsxDEV(UserLink, {\n    username: user.username,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n      children: user.username[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this);\n}\n\n_c3 = UserPicture;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 27\n  }, this) : null;\n}\n_c4 = ParentTweet;\nexport function Tweet(props) {\n  _s();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions,\n    isRetweet,\n    retweeter\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  var path = window.location.pathname;\n  var match = path.match(/(?<tweetid>\\d+)/);\n  var urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [isRetweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small text-muted\",\n        children: [\"Retweet via @\", /*#__PURE__*/_jsxDEV(UserDisplay, {\n          user: retweeter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(UserPicture, {\n          user: tweet.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(UserDisplay, {\n              includeFullName: true,\n              user: tweet.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n            tweet: tweet,\n            retweeter: tweet.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-group px-0\",\n          children: [actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"like\",\n                display: \"Likes\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"unlike\",\n                display: \"Unlike\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"retweet\",\n                display: \"Retweet\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 56\n          }, this), isDetail === true ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary btn-sm\",\n            onClick: handleLink,\n            children: \"View Tweet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 18\n  }, this);\n}\n\n_s(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c5 = Tweet;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UserLink\");\n$RefreshReg$(_c2, \"UserDisplay\");\n$RefreshReg$(_c3, \"UserPicture\");\n$RefreshReg$(_c4, \"ParentTweet\");\n$RefreshReg$(_c5, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserLink","props","username","handleUserLink","event","window","location","href","children","UserDisplay","user","includeFullName","nameDisplay","first_name","last_name","UserPicture","ParentTweet","tweet","parent","retweeter","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","preventDefault","handlePerformAction","newActionTweet","status","content","type","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {ActionBtn} from './buttons'\n\n\nfunction UserLink(props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`\n  }\n  return <span onClick={handleUserLink}>\n          {props.children}\n         </span>\n}\n\nfunction UserDisplay(props) {\n  const {user, includeFullName} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  \n  return <React.Fragment>\n            {nameDisplay}\n            <UserLink username={user.username}>@{user.username}</UserLink>\n          </React.Fragment>\n  }\n\n\n\nfunction UserPicture(props) {\n  const {user} = props\n  return  <UserLink username={user.username}>\n            <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n              {user.username[0]}\n            </span>\n          </UserLink>\n}\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  \n  export function Tweet(props) {\n          const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n          const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n          let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n          className = isRetweet === true ? `${className} p-2 border rounded` : className\n          var path = window.location.pathname\n          var match = path.match(/(?<tweetid>\\d+)/)\n          var urlTweetId = match ? match.groups.tweetid : -1\n          \n          const isDetail = `${tweet.id}` === `${urlTweetId}`\n          \n          const handleLink = (event) => {\n              event.preventDefault()\n              window.location.href = `/${tweet.id}`\n          }\n          \n          const handlePerformAction = (newActionTweet, status) => {\n            if (status === 200) {\n              setActionTweet(newActionTweet)\n            } else if (status === 201) {\n              if (didRetweet) {\n                didRetweet(newActionTweet)\n              }\n            }\n            \n            \n          }\n          \n          \n          return <div className={className}>\n            {isRetweet === true && <div className='mb-2'>\n              <span className='small text-muted'>Retweet via @<UserDisplay user={retweeter} /></span>\n              </div>}\n            <div className='d-flex'>\n              <div className=''>\n                <UserPicture user={tweet.user} />\n              </div>\n              <div className='col-11'>\n              \n            <div>\n            \n              <p>\n                <UserDisplay includeFullName user={tweet.user} />\n              </p>\n              <p>{tweet.content}</p>\n              \n\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />\n                 \n            </div>\n             <div className='btn btn-group px-0'>\n             {(actionTweet && hideActions !== true) && <React.Fragment>\n\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n\n             </React.Fragment>}\n             \n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View Tweet</button>}\n          </div>\n          </div>\n          </div>\n          </div>\n      }"]},"metadata":{},"sourceType":"module"}