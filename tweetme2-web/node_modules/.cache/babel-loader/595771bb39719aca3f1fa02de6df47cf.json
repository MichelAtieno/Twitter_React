{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = \"http://localhost:8000/api/tweets/\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  return action.type === 'like' ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: [tweet.likes, \" Likes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 41\n  }, this) : null;\n}\n_c = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 16\n  }, this);\n}\n_c2 = Tweet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActionBtn\");\n$RefreshReg$(_c2, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js"],"names":["React","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","className","type","likes","Tweet","id","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC7B,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,QAAMC,MAAM,GAAG,KAAf;AACA,QAAMC,GAAG,GAAG,mCAAZ;AACA,QAAMC,YAAY,GAAG,MAArB;AACAJ,EAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AACAH,EAAAA,GAAG,CAACM,MAAJ,GAAa,YAAW;AACpBP,IAAAA,QAAQ,CAACC,GAAG,CAACO,QAAL,EAAeP,GAAG,CAACQ,MAAnB,CAAR;AACH,GAFD;;AAGAR,EAAAA,GAAG,CAACS,OAAJ,GAAc,UAAUC,CAAV,EAAa;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAX,IAAAA,QAAQ,CAAC;AAAC,iBAAW;AAAZ,KAAD,EAA0C,GAA1C,CAAR;AACC,GAHD;;AAIAC,EAAAA,GAAG,CAACa,IAAJ;AACH;AAEL,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACzB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB;AACA,QAAMG,SAAS,GAAGH,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAoC,2BAAtD;AACA,SAAOD,MAAM,CAACE,IAAP,KAAgB,MAAhB,gBAAyB;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAAA,eAA+BF,KAAK,CAACI,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzB,GAAsF,IAA7F;AACH;KAJWN,S;AAMhB,OAAO,SAASO,KAAT,CAAeN,KAAf,EAAsB;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,QAAMG,SAAS,GAAGH,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAoC,yBAAtD;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,4BACP;AAAA,iBAAIF,KAAK,CAACM,EAAV,SAAiBN,KAAK,CAACO,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEP,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACG,UAAAA,IAAI,EAAC;AAAN;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEH,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACG,UAAAA,IAAI,EAAC;AAAN;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;MAXWE,K","sourcesContent":["import React from 'react'\n\nexport function loadTweets(callback) {\n        const xhr = new XMLHttpRequest()\n        const method = 'GET'\n        const url = \"http://localhost:8000/api/tweets/\"\n        const responseType = \"json\"\n        xhr.responseType = responseType\n        xhr.open(method, url)\n        xhr.onload = function() {\n            callback(xhr.response, xhr.status)  \n        }\n        xhr.onerror = function (e) {\n        console.log(e)\n        callback({\"message\": \"The request was an error\"}, 400)\n        }\n        xhr.send()\n    }\n\nexport function ActionBtn(props) {\n        const {tweet, action} = props\n        const className = props.className ? props.className : 'btn btn-primary btn-small'\n        return action.type === 'like' ? <button className={className}>{tweet.likes} Likes</button> : null\n    }\n   \nexport function Tweet(props) {\n        const {tweet} = props\n        const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n        return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n            <ActionBtn tweet={tweet} action={{type:\"like\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"unlike\"}} />\n        </div>\n    \n        </div>\n    }"]},"metadata":{},"sourceType":"module"}