{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 2323\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  useEffect(() => {\n    setTweetsInit([...props.newTweets].concat(tweetsInit));\n  }, [props.newTweets, tweetsInit]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweetsInit.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"AH41ZpHOXNpQAtc8i1WYoNCUDDw=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s3();\n\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 16\n  }, this);\n}\n\n_s3(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 16\n  }, this);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetsList","tweetsInit","setTweetsInit","concat","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 2323\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value = ''\n  }\n  \n  return <div className={props.className}>\n          <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n              </textarea>\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n          </div>\n        <TweetsList newTweets={newTweets} />\n        </div> \n}\n\n\nexport function TweetsList(props) {\n        const [tweetsInit, setTweetsInit] = useState([])\n        useEffect(() => {\n          setTweetsInit([...props.newTweets].concat(tweetsInit))\n        }, [props.newTweets, tweetsInit])\n        useEffect(() => {\n          const myCallback = (response, status) => {\n            if (status === 200){\n              setTweetsInit(response)\n            } else {\n              alert(\"There was an error\")\n            }\n          }\n          loadTweets(myCallback)\n        }, [])\n      \n        return tweetsInit.map((item, index)=>{\n          return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n        })\n      \n      }\n\nexport function ActionBtn(props) {\n        const {tweet, action} = props\n        const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n        const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n        const className = props.className ? props.className : 'btn btn-primary btn-small'\n        const actionDisplay = action.display ? action.display : 'Action'\n        \n        const handleClick = (event) => {\n          event.preventDefault()\n          if (action.type === 'like') {\n            if (userLike === true) {\n              setLikes(likes - 1)\n              setUserLike(false)\n            } else {\n              setLikes(likes+1)\n              setUserLike(true)\n            }     \n          }\n        }\n        const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n        return <button className={className} onClick={handleClick}>{display}</button>\n    }\n   \nexport function Tweet(props) {\n        const {tweet} = props\n        const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n        return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n            <ActionBtn tweet={tweet} action={{type:\"like\", display:\"Likes\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"unlike\", display:\"Unlike\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"retweet\", display:\"Retweet\"}} />\n        </div>\n       \n        </div>\n    }"]},"metadata":{},"sourceType":"module"}