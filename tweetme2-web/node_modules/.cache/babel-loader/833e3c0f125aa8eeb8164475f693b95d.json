{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary my-3\",\n      children: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this);\n  });\n}\n\n_s(TweetsList, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  _s2();\n\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 16\n  }, this);\n}\n\n_s2(ActionBtn, \"IF0IXDYzKRa1MgKiZWFZOaazeds=\");\n\n_c3 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 16\n  }, this);\n}\n_c4 = Tweet;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","TweetsList","tweets","setTweets","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","className","actionDisplay","display","handleClick","event","preventDefault","type","Tweet","id","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {loadTweets} from '../lookup'\n\nexport function TweetsComponent(props) {\n  return <form>\n            <textarea className='form-control'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n         </form>\n}\n\n\nexport function TweetsList(props) {\n        const [tweets, setTweets] = useState([])\n      \n        useEffect(() => {\n          const myCallback = (response, status) => {\n            if (status === 200){\n              setTweets(response)\n            } else {\n              alert(\"There was an error\")\n            }\n          }\n          loadTweets(myCallback)\n        }, [])\n      \n        return tweets.map((item, index)=>{\n          return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n        })\n      \n      }\n\nexport function ActionBtn(props) {\n        const {tweet, action} = props\n        const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n        const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n        const className = props.className ? props.className : 'btn btn-primary btn-small'\n        const actionDisplay = action.display ? action.display : 'Action'\n        \n        const handleClick = (event) => {\n          event.preventDefault()\n          if (action.type === 'like') {\n            if (userLike === true) {\n              setLikes(likes - 1)\n              setUserLike(false)\n            } else {\n              setLikes(likes+1)\n              setUserLike(true)\n            }     \n          }\n        }\n        const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n        return <button className={className} onClick={handleClick}>{display}</button>\n    }\n   \nexport function Tweet(props) {\n        const {tweet} = props\n        const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n        return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n            <ActionBtn tweet={tweet} action={{type:\"like\", display:\"Likes\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"unlike\", display:\"Unlike\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"retweet\", display:\"Retweet\"}} />\n        </div>\n       \n        </div>\n    }"]},"metadata":{},"sourceType":"module"}