{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPicture(props) {\n  const {\n    user\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n    children: user.username[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 11\n  }, this);\n}\n\n_c = UserPicture;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }, this) : null;\n}\n_c2 = ParentTweet;\nexport function Tweet(props) {\n  _s();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions,\n    isRetweet,\n    retweeter\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  var path = window.location.pathname;\n  var match = path.match(/(?<tweetid>\\d+)/);\n  var urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [isRetweet === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small text-muted\",\n        children: [\"Retweet via @\", retweeter.username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(UserPicture, {\n          user: tweet.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [tweet.user.first_name, \" \", tweet.user.last_name, \" \", \"@\", tweet.user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n            tweet: tweet,\n            retweeter: tweet.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-group px-0\",\n          children: [actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"like\",\n                display: \"Likes\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"unlike\",\n                display: \"Unlike\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n              tweet: actionTweet,\n              didPerformAction: handlePerformAction,\n              action: {\n                type: \"retweet\",\n                display: \"Retweet\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 56\n          }, this), isDetail === true ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary btn-sm\",\n            onClick: handleLink,\n            children: \"View Tweet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 18\n  }, this);\n}\n\n_s(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserPicture\");\n$RefreshReg$(_c2, \"ParentTweet\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserPicture","props","user","username","ParentTweet","tweet","parent","retweeter","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","window","location","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","event","preventDefault","href","handlePerformAction","newActionTweet","status","first_name","last_name","content","type","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {ActionBtn} from './buttons'\n\nfunction UserPicture(props) {\n  const {user} = props\n  return  <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n            {user.username[0]}\n          </span>\n}\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  \n  export function Tweet(props) {\n          const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n          const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n          let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n          className = isRetweet === true ? `${className} p-2 border rounded` : className\n          var path = window.location.pathname\n          var match = path.match(/(?<tweetid>\\d+)/)\n          var urlTweetId = match ? match.groups.tweetid : -1\n          \n          const isDetail = `${tweet.id}` === `${urlTweetId}`\n          \n          const handleLink = (event) => {\n              event.preventDefault()\n              window.location.href = `/${tweet.id}`\n          }\n          \n          const handlePerformAction = (newActionTweet, status) => {\n            if (status === 200) {\n              setActionTweet(newActionTweet)\n            } else if (status === 201) {\n              if (didRetweet) {\n                didRetweet(newActionTweet)\n              }\n            }\n            \n            \n          }\n          \n          \n          return <div className={className}>\n            {isRetweet === true && <div className='mb-2'>\n              <span className='small text-muted'>Retweet via @{retweeter.username} </span>\n              </div>}\n            <div className='d-flex'>\n              <div className=''>\n                <UserPicture user={tweet.user} />\n              </div>\n              <div className='col-11'>\n              \n            <div>\n            \n              <p>\n                {tweet.user.first_name}{\" \"}\n                {tweet.user.last_name}{\" \"}\n                @{tweet.user.username}\n              </p>\n              <p>{tweet.content}</p>\n              \n\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />\n                 \n            </div>\n             <div className='btn btn-group px-0'>\n             {(actionTweet && hideActions !== true) && <React.Fragment>\n\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n\n             </React.Fragment>}\n             \n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View Tweet</button>}\n          </div>\n          </div>\n          </div>\n          </div>\n      }"]},"metadata":{},"sourceType":"module"}