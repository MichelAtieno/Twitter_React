{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TweetsList } from './list';\nimport { apiTweetCreate } from './lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetCreate(props) {\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured, please try again.\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        required: true,\n        className: \"form-control\",\n        name: \"tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-3\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_c = TweetCreate;\nexport function TweetsComponent(props) {\n  _s();\n\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(TweetCreate, {\n      didTweet: handleNewTweet,\n      className: \"col-12 mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c2 = TweetsComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TweetCreate\");\n$RefreshReg$(_c2, \"TweetsComponent\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js"],"names":["React","useState","TweetsList","apiTweetCreate","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsComponent","newTweets","setNewTweets","canTweet","handleNewTweet","newTweet","tempNewTweets","unshift"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,QAAzB;AACA,SAAQC,cAAR,QAA6B,UAA7B;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaH,KAAnB;;AAEA,QAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAEhD,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAClBH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;AACF,GARD;;AAUA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGZ,WAAW,CAACa,OAAZ,CAAoBC,KAAnC;AACAjB,IAAAA,cAAc,CAACe,MAAD,EAAST,mBAAT,CAAd;AACAH,IAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACD,GALD;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAtB;AAAA,2BACG;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACE;AAAU,QAAA,GAAG,EAAET,WAAf;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,SAAS,EAAC,cAAtD;AAAqE,QAAA,IAAI,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UAAP;AASD;;KA9BQF,W;AAiCT,OAAO,SAASkB,eAAT,CAAyBjB,KAAzB,EAAgC;AAAA;;AAErC,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMwB,QAAQ,GAAGpB,KAAK,CAACoB,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,QAAIC,aAAa,GAAG,CAAC,GAAGL,SAAJ,CAApB;AACAK,IAAAA,aAAa,CAACC,OAAd,CAAsBF,QAAtB;AACAH,IAAAA,YAAY,CAACI,aAAD,CAAZ;AACD,GAJD;;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAEvB,KAAK,CAACgB,SAAtB;AAAA,eACEI,QAAQ,KAAK,IAAb,iBAAqB,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEC,cAAvB;AAAuC,MAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADvB,eAED,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEH,SAAvB;AAAA,SAAsClB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;GAfeiB,e;;MAAAA,e","sourcesContent":["import React, {useState} from 'react'\nimport {TweetsList} from './list'\nimport {apiTweetCreate} from './lookup'\n\n\nfunction TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  \n  const handleBackendUpdate = (response, status) => {\n    \n    if (status === 201) {\n      didTweet(response)\n    } else {\n      console.log(response)\n      alert(\"An error occured, please try again.\")\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    apiTweetCreate(newVal, handleBackendUpdate)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n              </textarea>\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n         </div>\n\n}\n\n\nexport function TweetsComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props} />\n        </div> \n}\n\n\n"]},"metadata":{},"sourceType":"module"}