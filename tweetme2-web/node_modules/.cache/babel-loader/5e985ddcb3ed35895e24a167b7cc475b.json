{"ast":null,"code":"function lookup(method, endpoint, callback, data) {\n  let jsonData;\n\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n\n  const xhr = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = \"json\";\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send(jsonData);\n}\n\nexport function createTweet(newTweet, callback) {\n  lookup(\"POST\", \"/tweets/create/\", callback, {\n    content: newTweet\n  });\n}\nexport function loadTweets(callback) {\n  lookup(\"GET\", \"/tweets/\", callback);\n}","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/lookup/components.js"],"names":["lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","onload","response","status","onerror","e","console","log","send","createTweet","newTweet","content","loadTweets"],"mappings":"AAAA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;AAC9C,MAAIC,QAAJ;;AACA,MAAID,IAAJ,EAAU;AACNC,IAAAA,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AACH;;AACD,QAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACQ,QAAMC,GAAG,GAAI,4BAA2BR,QAAS,EAAjD;AACAM,EAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAASX,MAAT,EAAiBS,GAAjB;;AACAF,EAAAA,GAAG,CAACK,MAAJ,GAAa,YAAW;AACpBV,IAAAA,QAAQ,CAACK,GAAG,CAACM,QAAL,EAAeN,GAAG,CAACO,MAAnB,CAAR;AACH,GAFD;;AAGAP,EAAAA,GAAG,CAACQ,OAAJ,GAAc,UAAUC,CAAV,EAAa;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAd,IAAAA,QAAQ,CAAC;AAAC,iBAAW;AAAZ,KAAD,EAA0C,GAA1C,CAAR;AACC,GAHD;;AAIAK,EAAAA,GAAG,CAACY,IAAJ,CAASf,QAAT;AACX;;AAED,OAAO,SAASgB,WAAT,CAAqBC,QAArB,EAA+BnB,QAA/B,EAAyC;AAC5CH,EAAAA,MAAM,CAAC,MAAD,EAAS,iBAAT,EAA4BG,QAA5B,EAAsC;AAACoB,IAAAA,OAAO,EAAED;AAAV,GAAtC,CAAN;AACH;AAGD,OAAO,SAASE,UAAT,CAAoBrB,QAApB,EAA8B;AACzBH,EAAAA,MAAM,CAAC,KAAD,EAAQ,UAAR,EAAoBG,QAApB,CAAN;AACH","sourcesContent":["function lookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n            const url = `http://localhost:8000/api${endpoint}`\n            xhr.responseType = \"json\"\n            xhr.open(method, url)\n            xhr.onload = function() {\n                callback(xhr.response, xhr.status)  \n            }\n            xhr.onerror = function (e) {\n            console.log(e)\n            callback({\"message\": \"The request was an error\"}, 400)\n            }\n            xhr.send(jsonData)\n}\n\nexport function createTweet(newTweet, callback) {\n    lookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\n\nexport function loadTweets(callback) {\n            lookup(\"GET\", \"/tweets/\", callback)    \n        }"]},"metadata":{},"sourceType":"module"}