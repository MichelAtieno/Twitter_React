{"ast":null,"code":"var _jsxFileName = \"/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this);\n  });\n}\n\n_s(TweetsList, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c = TweetsList;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 16\n  }, this);\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\",\n          display: \"Likes\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"unlike\",\n          display: \"Unlike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 16\n  }, this);\n}\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"sources":["/home/michel/Desktop/Machine Learning/Twitter_React/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsList","props","tweets","setTweets","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","className","actionDisplay","display","type","likes","Tweet","id","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,WAAzB;;AAGA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACvC,UAAIA,MAAM,KAAK,GAAf,EAAmB;AACjBH,QAAAA,SAAS,CAACE,QAAD,CAAT;AACD,OAFD,MAEO;AACLE,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,KAND;;AAOAR,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAOF,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC/B,wBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAC;AAA9B,OAA0E,GAAEC,KAAM,YAAlF;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,CAAP;AAID;;GAlBSV,U;;KAAAA,U;AAoBhB,OAAO,SAASW,SAAT,CAAmBV,KAAnB,EAA0B;AACzB,QAAM;AAACW,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBZ,KAAxB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,2BAAtD;AACA,QAAMC,aAAa,GAAGF,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAxB,GAAkC,QAAxD;AACA,QAAMA,OAAO,GAAGH,MAAM,CAACI,IAAP,KAAgB,MAAhB,GAA0B,GAAEL,KAAK,CAACM,KAAM,IAAGH,aAAc,EAAzD,GAA8DA,aAA9E;AACA,sBAAO;AAAQ,IAAA,SAAS,EAAED,SAAnB;AAAA,cAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;MANWL,S;AAQhB,OAAO,SAASQ,KAAT,CAAelB,KAAf,EAAsB;AACrB,QAAM;AAACW,IAAAA;AAAD,MAAUX,KAAhB;AACA,QAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,yBAAtD;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,4BACP;AAAA,iBAAIF,KAAK,CAACQ,EAAV,SAAiBR,KAAK,CAACS,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAET,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC,MAAN;AAAcD,UAAAA,OAAO,EAAC;AAAtB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC,QAAN;AAAgBD,UAAAA,OAAO,EAAC;AAAxB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,KAAlB;AAAyB,QAAA,MAAM,EAAE;AAACK,UAAAA,IAAI,EAAC;AAAN;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH;MAZWE,K","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetsList(props) {\n        const [tweets, setTweets] = useState([])\n      \n        useEffect(() => {\n          const myCallback = (response, status) => {\n            if (status === 200){\n              setTweets(response)\n            } else {\n              alert(\"There was an error\")\n            }\n          }\n          loadTweets(myCallback)\n        }, [])\n      \n        return tweets.map((item, index)=>{\n          return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n        })\n      \n      }\n\nexport function ActionBtn(props) {\n        const {tweet, action} = props\n        const className = props.className ? props.className : 'btn btn-primary btn-small'\n        const actionDisplay = action.display ? action.display : 'Action'\n        const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` :  actionDisplay\n        return <button className={className}>{display}</button>\n    }\n   \nexport function Tweet(props) {\n        const {tweet} = props\n        const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n        return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n            <ActionBtn tweet={tweet} action={{type:\"like\", display:\"Likes\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"unlike\", display:\"Unlike\"}} />\n            <ActionBtn tweet={tweet} action={{type:\"retweet\", }} />\n        </div>\n       \n        </div>\n    }"]},"metadata":{},"sourceType":"module"}