{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.ff76be17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n            const url = `https://twitter-django-react.herokuapp.com/api${endpoint}`\n            xhr.responseType = \"json\"\n            const csrftoken = getCookie('csrftoken')\n            xhr.open(method, url)\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n            if (csrftoken){\n                // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n            }\n            \n            xhr.onload = function() {\n                if (xhr.status === 403) {\n                    const detail = xhr.response.detail\n                    if (detail === \"Authentication credentials were not provided.\") {\n                        if (window.location.href.indexOf(\"login\") === -1) {\n                            window.location.href = \"/login/?showLoginRequired=true\"\n                        }\n                        \n                        \n                    }      \n                }\n                callback(xhr.response, xhr.status)  \n            }\n            xhr.onerror = function (e) {\n            console.log(e)\n            callback({\"message\": \"The request was an error\"}, 400)\n            }\n            console.log(jsonData)\n            xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data =  {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)    \n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n  \n    if (nextUrl !== null && nextUrl !== undefined ) {\n        endpoint = nextUrl.replace(\"https://twitter-django-react.herokuapp.com/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)    \n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined ) {\n        endpoint = nextUrl.replace(\"https://twitter-django-react.herokuapp.com/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)    \n}","import React from 'react'\nimport { apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      \n      if ((status === 200 || status === 201) && didPerformAction) {\n       \n        didPerformAction(response, status)\n      }\n    }\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n      \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    \n    const handleBackendUpdate = (response, status) => {\n        \n        if (status === 201) {\n        didTweet(response)\n        } else {\n        console.log(response)\n        alert(\"An error occured, please try again.\")\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n                <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n                </form>\n            </div>\n\n}\n\n\n\n\n\n","import React from 'react'\n\n\n\nexport function UserLink(props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n          {props.children}\n         </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  \n  return <React.Fragment>\n            {nameDisplay}\n            <UserLink username={user.username}>@{user.username}</UserLink>\n          </React.Fragment>\n  }\n\n\n\nexport function UserPicture(props) {\n  const {user} = props\n  return  <UserLink username={user.username}>\n            <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n              {user.username[0]}\n            </span>\n          </UserLink>\n}","import React, {useState} from 'react'\nimport {ActionBtn} from './buttons'\n\nimport {UserDisplay, UserPicture} from '../profiles'\n\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  \n  export function Tweet(props) {\n          const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n          const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n          let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n          className = isRetweet === true ? `${className} p-2 border rounded` : className\n          var path = window.location.pathname\n          var match = path.match(/(?<tweetid>\\d+)/)\n          var urlTweetId = match ? match.groups.tweetid : -1\n          \n          const isDetail = `${tweet.id}` === `${urlTweetId}`\n          \n          const handleLink = (event) => {\n              event.preventDefault()\n              window.location.href = `/${tweet.id}`\n          }\n          \n          const handlePerformAction = (newActionTweet, status) => {\n            if (status === 200) {\n              setActionTweet(newActionTweet)\n            } else if (status === 201) {\n              if (didRetweet) {\n                didRetweet(newActionTweet)\n              }\n            }\n            \n            \n          }\n          \n          \n          return <div className={className}>\n            {isRetweet === true && <div className='mb-2'>\n              <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n              </div>}\n            <div className='d-flex'>\n              <div className=''>\n                <UserPicture user={tweet.user} />\n              </div>\n              <div className='col-11'>\n              \n            <div>\n            \n              <p>\n                <UserDisplay includeFullName user={tweet.user} />\n              </p>\n              <p>{tweet.content}</p>\n              \n\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />\n                 \n            </div>\n             <div className='btn btn-group px-0'>\n             {(actionTweet && hideActions !== true) && <React.Fragment>\n\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n\n             </React.Fragment>}\n             \n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View Tweet</button>}\n          </div>\n          </div>\n          </div>\n          </div>\n      }","import React, {useEffect, useState} from 'react'\nimport { apiTweetList} from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  \n  }","import React, {useEffect, useState} from 'react'\nimport {  apiTweetFeed } from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } \n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  \n  }","import React, {useEffect, useState} from 'react'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\nimport {FeedList} from './feed'\n\n\nexport function FeedComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n        </div> \n}\n\nexport function TweetsComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props} />\n        </div> \n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error find ing your tweet.\")\n    }\n  }\n\n  useEffect(() =>{\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n\n  }, [tweetId, didLookup, setDidLookup])\n  \n  \n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\n\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n  if (tweetsEl) {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container); }\n})\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}