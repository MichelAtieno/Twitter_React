{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","console","log","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.f0092244.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n            const url = `https://twitter-django-react.herokuapp.com/api${endpoint}`\n            xhr.responseType = \"json\"\n            const csrftoken = getCookie('csrftoken')\n            xhr.open(method, url)\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n            if (csrftoken){\n                // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n            }\n            \n            xhr.onload = function() {\n                if (xhr.status === 403) {\n                    const detail = xhr.response.detail\n                    if (detail === \"Authentication credentials were not provided.\") {\n                        if (window.location.href.indexOf(\"login\") === -1) {\n                            window.location.href = \"/login/?showLoginRequired=true\"\n                        }\n                        \n                        \n                    }      \n                }\n                callback(xhr.response, xhr.status)  \n            }\n            xhr.onerror = function (e) {\n            \n            callback({\"message\": \"The request was an error\"}, 400)\n            }\n            \n            xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data =  {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)    \n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n  \n    if (nextUrl !== null && nextUrl !== undefined ) {\n        endpoint = nextUrl.replace(\"https://twitter-django-react.herokuapp.com/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)    \n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined ) {\n        endpoint = nextUrl.replace(\"https://twitter-django-react.herokuapp.com/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)    \n}","import React from 'react'\nimport { apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) => {\n      \n      if ((status === 200 || status === 201) && didPerformAction) {\n       \n        didPerformAction(response, status)\n      }\n    }\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n      \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    \n    const handleBackendUpdate = (response, status) => {\n        \n        if (status === 201) {\n        didTweet(response)\n        } else {\n        alert(\"An error occured, please try again.\")\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n                <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n                </form>\n            </div>\n\n}\n\n\n\n\n\n","import React from 'react'\n\n\n\nexport function UserLink(props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n          {props.children}\n         </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  \n  return <React.Fragment>\n            {nameDisplay}\n            {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n           \n          </React.Fragment>\n  }\n\n\n\nexport function UserPicture(props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>{user.username[0]}</span>\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}\n","import React, {useEffect, useState} from 'react'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\nimport {UserDisplay, UserPicture} from './components';\nimport {DisplayCount} from './utils'\n\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    console.log(user)\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n                <UserPicture user={user} hideLink />\n                <p><UserDisplay user={user} includeFullName hideLink/></p>\n                <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\n                <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n                <p>{user.location}</p>\n                <p>{user.bio}</p>\n                <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n\n            </div> : null\n}\n\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      } \n    }\n  \n    useEffect(() =>{\n      if (didLookup === false) {\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n  \n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n      \n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ?  <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)    \n}\n\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data =  {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)    \n}","import React, {useState} from 'react'\nimport {ActionBtn} from './buttons'\n\nimport {UserDisplay, UserPicture} from '../profiles'\n\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  \n  export function Tweet(props) {\n          const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n          const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n          let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n          className = isRetweet === true ? `${className} p-2 border rounded` : className\n          var path = window.location.pathname\n          var match = path.match(/(?<tweetid>\\d+)/)\n          var urlTweetId = match ? match.groups.tweetid : -1\n          \n          const isDetail = `${tweet.id}` === `${urlTweetId}`\n          \n          const handleLink = (event) => {\n              event.preventDefault()\n              window.location.href = `/${tweet.id}`\n          }\n          \n          const handlePerformAction = (newActionTweet, status) => {\n            if (status === 200) {\n              setActionTweet(newActionTweet)\n            } else if (status === 201) {\n              if (didRetweet) {\n                didRetweet(newActionTweet)\n              }\n            }\n            \n            \n          }\n          \n          \n          return <div className={className}>\n            {isRetweet === true && <div className='mb-2'>\n              <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n              </div>}\n            <div className='d-flex'>\n              <div className=''>\n                <UserPicture user={tweet.user} />\n              </div>\n              <div className='col-11'>\n              \n            <div>\n            \n              <p>\n                <UserDisplay includeFullName user={tweet.user} />\n              </p>\n              <p>{tweet.content}</p>\n              \n\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />\n                 \n            </div>\n             <div className='btn btn-group px-0'>\n             {(actionTweet && hideActions !== true) && <React.Fragment>\n\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n\n             </React.Fragment>}\n             \n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View Tweet</button>}\n          </div>\n          </div>\n          </div>\n          </div>\n      }","import React, {useEffect, useState} from 'react'\nimport { apiTweetList} from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  \n  }","import React, {useEffect, useState} from 'react'\nimport {  apiTweetFeed } from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } \n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  \n  }","import React, {useEffect, useState} from 'react'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\nimport {FeedList} from './feed'\n\n\nexport function FeedComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n        </div> \n}\n\nexport function TweetsComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props} />\n        </div> \n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error find ing your tweet.\")\n    }\n  }\n\n  useEffect(() =>{\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n\n  }, [tweetId, didLookup, setDidLookup])\n  \n  \n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\n\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container); \n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n    ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container); \n})\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}