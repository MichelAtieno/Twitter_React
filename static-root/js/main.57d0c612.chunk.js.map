{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.57d0c612.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n            const url = `http://localhost:8000/api${endpoint}`\n            xhr.responseType = \"json\"\n            const csrftoken = getCookie('csrftoken')\n            xhr.open(method, url)\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n            if (csrftoken){\n                xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n                xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n            }\n            \n            xhr.onload = function() {\n                callback(xhr.response, xhr.status)  \n            }\n            xhr.onerror = function (e) {\n            console.log(e)\n            callback({\"message\": \"The request was an error\"}, 400)\n            }\n            console.log(jsonData)\n            xhr.send(jsonData)\n}\n\n","import React from 'react'\nimport { apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      \n      if ((status === 200 || status === 201) && didPerformAction) {\n       \n        didPerformAction(response, status)\n      }\n    }\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n      \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` :  actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data =  {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)    \n}\n\n\nexport function apiTweetList(username, callback) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    \n    backendLookup(\"GET\", endpoint, callback)    \n}","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    \n    const handleBackendUpdate = (response, status) => {\n        \n        if (status === 201) {\n        didTweet(response)\n        } else {\n        console.log(response)\n        alert(\"An error occured, please try again.\")\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n                <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n                </form>\n            </div>\n\n}\n\n\n\n\n\n","import React, {useState} from 'react'\nimport {ActionBtn} from './buttons'\n\n\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ?\n        <div className='row'>\n          <div className='col-11 mx-auto p-3 border rounded'>\n          <p className='mb-0 text-muted small'>\n          <Tweet hideActions className={' '} tweet={tweet.parent} />\n          </p>\n          </div>\n        </div> : null\n  }\n  \n  export function Tweet(props) {\n          const {tweet, didRetweet, hideActions} = props\n          const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n          const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n          var path = window.location.pathname\n          var match = path.match(/(?<tweetid>\\d+)/)\n          var urlTweetId = match ? match.groups.tweetid : -1\n          \n          const isDetail = `${tweet.id}` === `${urlTweetId}`\n          \n          const handleLink = (event) => {\n              event.preventDefault()\n              window.location.href = `/${tweet.id}`\n          }\n          \n          const handlePerformAction = (newActionTweet, status) => {\n            if (status === 200) {\n              setActionTweet(newActionTweet)\n            } else if (status === 201) {\n              if (didRetweet) {\n                didRetweet(newActionTweet)\n              }\n            }\n            \n            \n          }\n          \n          \n          return <div className={className}>\n            <div>\n              <p>{tweet.id} - {tweet.content}</p>\n              <ParentTweet tweet={tweet} />\n                 \n            </div>\n             <div className='btn btn-group'>\n             {(actionTweet && hideActions !== true) && <React.Fragment>\n\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n\n             </React.Fragment>}\n             \n              {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View Tweet</button>}\n          </div>\n          \n          </div>\n      }","import React, {useEffect, useState} from 'react'\nimport { apiTweetList} from './lookup'\nimport{Tweet} from './detail'\n\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      } \n    }, [props.newTweets, tweets, tweetsInit])\n   \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setTweetsInit(response)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    return tweets.map((item, index)=>{\n      return <Tweet \n        tweet={item}\n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark'\n        key={`${index}-{item.id}`} />\n    })\n  \n  }","import React, {useEffect, useState} from 'react'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\n\n\nexport function TweetsComponent(props) {\n \n  const [newTweets, setNewTweets] = useState([])\n  \n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  \n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props} />\n        </div> \n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error find ing your tweet.\")\n    }\n  }\n\n  useEffect(() =>{\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n\n  }, [tweetId, didLookup, setDidLookup])\n  \n  \n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\n\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n  if (tweetsEl) {\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container); }\n})\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}